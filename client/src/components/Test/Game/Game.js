import React from 'react'
import './GameElements.scss'
import Play from './Play/Play'
import Results from './Results/Results';

const questions = [
    {
        title: 'Разрешен ли Вам съезд на дорогу с грунтовым покрытием?',
        variants: ['Разрешен', 'Разрешен только при технической неисправности транспортного средства.', 'Запрещен'],
        correct: 0,
    },
    {
        title: 'Можно ли Вам остановиться в указанном месте для посадки пассажира?',
        variants: ['Можно', 'Можно, если Вы управляете такси.', 'Нельза'],
        correct: 1,
    },
    {
        title: 'Что означает мигание зеленого сигнала светофора?',
        variants: [
            'Предупреждает о неисправности светофора',
            'Разрешает движение и информирует о том, что вскоре будет включен запрещающий сигнал.',
            'Запрещает дальнейшее движение.',
        ],
        correct: 2,
    },
    {
        title: 'С какой скоростью Вы можете продолжить движение вне населенного пункта по левой полосе на легковом автомобиле?',
        variants: [
            'Не более 50 км/ч.',
            'Не менее 50 км/ч и не более 70 км/ч.',
            'Не менее 50 км/ч и не более 90 км/ч.',
        ],
        correct: 2,
    },
    {
        title: 'Можно ли водителю легкового автомобиля выполнить опережение грузовых автомобилей вне населенного пункта по такой траектории?',
        variants: [
            'Можно',
            'Можно, если скорость грузовых автомобилей менее 30 км/ч.',
            'Нельза',
        ],
        correct: 2,
    },
    {
        title: 'Сколько полос для движения имеет данная дорога?',
        variants: [
            'Две',
            'Четыре',
            'Пять',
        ],
        correct: 2,
    },
    {
        title: 'Можно ли Вам въехать на мост первым?',
        variants: [
            'Можно',
            'Можно, если Вы не затрудните движение встречному автомобилю',
            'Нельза',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 0,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 1,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 1,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 1,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 1,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 0,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 0,
    },
    {
        title: 'Разрешен ли Вам выезд на полосу с реверсивным движением, если реверсивный светофор выключен?',
        variants: [
            'Разрешен',
            'Разрешен, если скорость автобуса менее 30 км/ч.',
            'Запрещен',
        ],
        correct: 2,
    },
];

function Game({ retry, setAuth }) {

    const [step, setStep] = React.useState(0)
    const [correct, setCorrect] = React.useState(0)
    const [test_id, setTestId] = React.useState(null)

    const question = questions[step]

    const onClickVariant = (index) => {
        setStep(step + 1)

        if (index === question.correct) {
            setCorrect(correct + 1)
        }
    }

    const getTestId = async () => {
        try {
            const response = await fetch('http://localhost:5000/test/tests', {
                method: 'GET',
                headers: { token: localStorage.token }
            })
            const parseRes = await response.json()
            setTestId(parseRes[0].max)
        } catch (error) {
            console.log(error.message);
        }
    }

    React.useEffect(() => {
        getTestId()
    }, [])

    return (
        <div className="Game">
            {step !== questions.length ? <Play step={step} question={question} onClickVariant={onClickVariant} questions={questions} test_id={test_id} /> : <Results correct={correct} questions={questions} retry={retry} step={step} test_id={test_id} setAuth={setAuth} />}
        </div>
    );
}

export default Game;
